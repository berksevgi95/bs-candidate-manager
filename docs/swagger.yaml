info:
  contact:
    email: support@swagger.io
    name: API Support
    url: http://www.swagger.io/support
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html
  termsOfService: http://swagger.io/terms/
paths:
  /acceptCandidate:
    put:
      consumes:
      - application/json
      description: Accepts a candidate
      parameters:
      - description: Candidate ID
        in: query
        name: id
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          headers:
            Token:
              description: qwerty
              type: string
          schema:
            type: object
        default:
          description: ""
          schema:
            type: object
      summary: Accept candidate
  /arrangeMeeting:
    put:
      consumes:
      - application/json
      description: Aranges a meeting with an available candidate
      parameters:
      - description: Candidate ID
        in: query
        name: id
        type: string
      - description: Next Meeting Time (Ex. 2020-11-11T20:59:48.133+03:00)
        in: query
        name: nextMeetingTime
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          headers:
            Token:
              description: qwerty
              type: string
          schema:
            type: object
        default:
          description: ""
          schema:
            type: object
      summary: Arrange meeting
  /completeMeeting:
    put:
      consumes:
      - application/json
      description: Completes a meeting of specified candidate
      parameters:
      - description: Candidate ID
        in: query
        name: id
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          headers:
            Token:
              description: qwerty
              type: string
          schema:
            type: object
        default:
          description: ""
          schema:
            type: object
      summary: Complete meeting
  /createCandidate:
    post:
      consumes:
      - application/json
      description: Creates a new candidate
      parameters:
      - description: First Name
        in: query
        name: first_name
        required: true
        type: string
      - description: Last Name
        in: query
        name: last_name
        required: true
        type: string
      - description: E-Mail
        in: query
        name: email
        type: string
      - description: Department
        in: query
        name: department
        type: string
      - description: University
        in: query
        name: university
        type: string
      - description: Experience
        in: query
        name: experience
        type: boolean
      - description: Assignee
        in: query
        name: assignee
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          headers:
            Token:
              description: qwerty
              type: string
          schema:
            type: object
        default:
          description: ""
          schema:
            type: object
      summary: Create candidate
  /deleteCandidate:
    delete:
      consumes:
      - application/json
      description: Removes a candidate by id
      parameters:
      - description: Candidate ID
        in: query
        name: id
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          headers:
            Token:
              description: qwerty
              type: string
          schema:
            type: object
        default:
          description: ""
          schema:
            type: object
      summary: Delete candidate
  /denyCandidate:
    put:
      consumes:
      - application/json
      description: Denies a candidate by id
      parameters:
      - description: Candidate ID
        in: query
        name: id
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          headers:
            Token:
              description: qwerty
              type: string
          schema:
            type: object
        default:
          description: ""
          schema:
            type: object
      summary: Deny candidate
  /findAssigneeIDByName:
    get:
      consumes:
      - application/json
      description: Finds ID of an assignee by name
      parameters:
      - description: Assignee Name
        in: query
        name: name
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          headers:
            Token:
              description: qwerty
              type: string
          schema:
            type: object
        default:
          description: ""
          schema:
            type: object
      summary: Find assignee ID by name
  /findAssigneesCandidates:
    get:
      consumes:
      - application/json
      description: Finds candidates of an assignee by ID of assignee
      parameters:
      - description: Assignee ID
        in: query
        name: id
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          headers:
            Token:
              description: qwerty
              type: string
          schema:
            type: object
        default:
          description: ""
          schema:
            type: object
      summary: Find asignees candidates
  /readCandidate:
    get:
      consumes:
      - application/json
      description: Reads a specific candidate by id
      parameters:
      - description: Candidate ID
        in: query
        name: id
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          headers:
            Token:
              description: qwerty
              type: string
          schema:
            type: object
        default:
          description: ""
          schema:
            type: object
      summary: Read candidate
swagger: "2.0"
